name: CI/CD Pipeline

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  lint:
    name: 🔍 Lint Code
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: 🔍 Check lint
        run: uv run ruff check --fix core plugins

      - name: 📋 Check type
        run: uv run pyright core plugins

  test:
    name: 🧪 Test
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: 🧪 Run test Core
        run: |
          cd core
          uv run pytest

  korbit-analysis:
    name: 🤖 Korbit Code Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🤖 Run Korbit Analysis
        uses: korbit-ai/korbit-action@v1
        with:
          api_key: ${{ secrets.KORBIT_API_KEY }}
          project_id: ${{ secrets.KORBIT_PROJECT_ID }}
          fail_on_error: false
          analyze_only_changes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  korbit-full-analysis:
    name: 🔍 Korbit Full Analysis
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      - name: 🔍 Run Full Korbit Analysis
        uses: korbit-ai/korbit-action@v1
        with:
          api_key: ${{ secrets.KORBIT_API_KEY }}
          project_id: ${{ secrets.KORBIT_PROJECT_ID }}
          analyze_only_changes: false
          generate_report: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}