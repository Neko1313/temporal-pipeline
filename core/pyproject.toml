[project]
name = "core"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "Neko1313", email = "89246763535@mail.ru" }
]
requires-python = ">=3.12"
dependencies = [
    "polars>=1.31.0",
    "pydantic>=2.11.7",
    "pyyaml>=6.0.2",
    "temporalio>=1.13.0",
    "typer>=0.16.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# CLI Interface
[project.scripts]
temporal-pipeline = "core.cli:app"
tpd = "core.cli:app"
pipeline = "core.cli:app"

# Tests settings
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
pythonpath = "."

log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(name)s: %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--disable-warnings",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml:coverage.xml",
    "--cov-report=term-missing:skip-covered",
    "--cov-fail-under=10",
    "--maxfail=10",
]

[tool.coverage.run]
source = [
    "src",
]

omit = [
    "*/__init__.py",
    "*/tests/*",
    "*/test_*",
]

branch = true
concurrency = ["thread", "greenlet"]

[tool.coverage.report]
exclude_lines = [
    "@abstractmethod",
    "@abc.abstractmethod",
    "TYPE_CHECKING",
    "pragma: no cover",
    "raise NotImplementedError",
    "except Exception as e:",
    "except SQLAlchemyError as e",
    "except IntegrityError as e",
    "except EntityNotFoundError",
    "logger.warning.*",
    "logger.error.*",
    "await.*dispose",
    "await.*close",
    ".*cleanup.*",
]

fail_under = 10
show_missing = true
precision = 2
